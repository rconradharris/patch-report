scanner = GitHubScanner(self, username, api_url, token, match_string)
    get_repos()
    refresh()
    self._repos = []


def refresh():
    for username in config.get_github_usernames():
        api_url = config.get("github:%s" % username, 'api_url')
        token = config.get("github:%s" % username, 'token')
        match_string = config.get("github:%s" % username, 'match_string')
        scanner = GitHubScanner(username, api_url, token, match_string)

        for repo in scanner.repos():
            self._repos.append(repo)


- Github integration:
    [github:O3eng]
        api_url = https://github.rackspace.com/api/v3
        token = foo
        match_string = -rax-patches

    [github:O3eng-infra]
        api_url = https://github.rackspace.com/api/v3
        token = foo
        match_string = -rax-patches

    Scan for repos that match `match_string`, if match add to config
    - Move repo list out to 'repos.pickle' in '/tmp'


    - Project
        - repo
            - patch_series
        - github


- Make rows with 0 patches appear grayed out
- separate add and commit from redmine _add_issues
- Add launchpad support?
- Add setup.py
- Move templates and static out of project directory and up one level


BLOCKED
    https://github.com/maxtepkeev/python-redmine/pull/60
